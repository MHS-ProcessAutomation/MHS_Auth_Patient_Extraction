<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.str_Config_Path="\\firework\data\Automation\staff\Revenue Cycle\UM Auth Entry Patient Data Extraction\Config\Config.xlsx" this:Main.IfUseQueue="True" this:Main.MasterLogFilePath="\\firework\data\Automation\staff\Revenue Cycle\UM Auth Entry\Output\MasterLogFile" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uisad="clr-namespace:UiPath.IntelligentOCR.StudioWeb.Activities.DataExtraction;assembly=UiPath.IntelligentOCR.StudioWeb.Activities" xmlns:uisad1="clr-namespace:UiPath.IntelligentOCR.StudioWeb.Activities.DataValidation;assembly=UiPath.IntelligentOCR.StudioWeb.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="str_Config_Path" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Variable that checks if the Document Understanding Process is using Orchestrator Queues or not." Name="IfUseQueue" Type="InArgument(x:Boolean)" />
    <x:Property sap2010:Annotation.AnnotationText="Full file path to be processed. If IfUseQueue is True - then this one will be overwritten with queue item value" Name="FilePath" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="If True then always skip Action Center part. Useful for testing" Name="IfSkipHumanValidationAlways" Type="InArgument(x:Boolean)" />
    <x:Property sap2010:Annotation.AnnotationText="CSV file with history of all extractions" Name="MasterLogFilePath" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1624.8,1149.6</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Main_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="88">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.ValidationStation</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Actions</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.DataExtraction</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.DocumentClassification</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.DataValidation</x:String>
      <x:String>UiPath.IntelligentOCR.Actions.Abstractions</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Web.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="114">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>ExtendedExtractionRe.8Tibe4wGZ0R1gqQSK2uK5Q</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.StudioWeb.Activities</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>Microsoft.Extensions.DependencyModel</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>UM_Delegation-Performer.Core</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>UM_Auth_PatientExtraction.Core</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="UM_Auth_Patient Extraction&#xA;Extract info from the authorization document and move to the new directory. For Authorizations - create a new queue item&#xA;&#xA;&#xA;- Uses IXP model for data extraction. &#xA;- Creates am Action Acenter task for humam if extraction confidence is low&#xA;- Uses Clarity DB query to get patient info (MHD number)&#xA;- Uses few C# coded workflows for data manipulation&#xA;- All extraction results are saved into MasterLogFile.csv" DisplayName="Main Sequence - Action Center" sap:VirtualizedContainerService.HintSize="1516,1190" sap2010:WorkflowViewState.IdRef="Sequence_9">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="config" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Used to control the number of attempts of retrying in case of a system exception." Name="maxAttempts" />
      <Variable x:TypeArguments="x:TimeSpan" sap2010:Annotation.AnnotationText="Used to control the amount of time between retries in the Retry Scope activity." Name="retryInterval" />
      <Variable x:TypeArguments="ui:QueueItem" sap2010:Annotation.AnnotationText="Stores the transaction item to be updated in the Orchestrator Queue." Name="TransactionItem" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="The file path of the target document that is going to be processed." Name="strTargetFile" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:Annotation.AnnotationText="Dictionary that contains document-related values, such as extracted results, and other related data" Name="dictDocData" />
      <Variable x:TypeArguments="x:String" Name="strJsonFormattedExtractionResults" />
      <Variable x:TypeArguments="uisad:IDocumentData(uisad:DictionaryData)" sap2010:Annotation.AnnotationText="The results of the data extraction process." Name="extractionResults" />
      <Variable x:TypeArguments="x:String" Name="strAuthNumber" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Read the config file first; all Log &amp; Exception messages are defined there" DisplayName="ReadConfigFile" sap:VirtualizedContainerService.HintSize="638,219" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_65" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\00_ReadConfigFile.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">[str_Config_Path]</InArgument>
        <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings", "Constants"}]</InArgument>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[config]</OutArgument>
        <OutArgument x:TypeArguments="x:Int32" x:Key="out_MaxAttempts">[maxAttempts]</OutArgument>
        <OutArgument x:TypeArguments="x:TimeSpan" x:Key="out_RetryInterval">[retryInterval]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <TryCatch DisplayName="Try Catch - Process File" sap:VirtualizedContainerService.HintSize="638,876" sap2010:WorkflowViewState.IdRef="TryCatch_3">
      <TryCatch.Try>
        <Flowchart DisplayName="File Processing Flowchart" sap:VirtualizedContainerService.HintSize="600,625" sap2010:WorkflowViewState.IdRef="Flowchart_10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <av:Point x:Key="ShapeLocation">35,285</av:Point>
              <av:Size x:Key="ShapeSize">50,50</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">85,310 115,310</av:PointCollection>
              <x:Double x:Key="Height">899.5555555555553</x:Double>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Flowchart.StartNode>
            <x:Reference>__ReferenceID10</x:Reference>
          </Flowchart.StartNode>
          <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:Point x:Key="ShapeLocation">905,275</av:Point>
                <av:Size x:Key="ShapeSize">110,70</av:Size>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Post-export &amp;&#xA;Set Transaction Status (Success) &amp;&#xA;Process Cleanup" DisplayName="EndProcess" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_78" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\80_EndProcess.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[config]</InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="in_MaxAttempts">[maxAttempts]</InArgument>
                <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">[retryInterval]</InArgument>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_dictDocData">[dictDocData]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
          </FlowStep>
          <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:Point x:Key="ShapeLocation">275,275</av:Point>
                <av:Size x:Key="ShapeSize">110,70</av:Size>
                <av:PointCollection x:Key="ConnectorLocation">385,310 430,310 430,260</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Get the TransactionItem" DisplayName="GetTransactionItem" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_82" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\15_GetTransactionItem.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:Int32" x:Key="in_MaxAttempts">[maxAttempts]</InArgument>
                <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">[retryInterval]</InArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="out_TargetFile">[strTargetFile]</OutArgument>
                <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_TransactionItem">[TransactionItem]</OutArgument>
                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_Config">[config]</InOutArgument>
                <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_dictDocData">[dictDocData]</OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
            <FlowStep.Next>
              <FlowDecision x:Name="__ReferenceID6" Condition="[Not String.IsNullOrWhiteSpace(strTargetFile) OrElse Not String.IsNullOrWhiteSpace(FilePath)]" DisplayName="Target File found?" sap:VirtualizedContainerService.HintSize="60,60" sap2010:WorkflowViewState.IdRef="FlowDecision_23">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <av:Point x:Key="ShapeLocation">400,200</av:Point>
                    <av:Size x:Key="ShapeSize">60,60</av:Size>
                    <av:PointCollection x:Key="TrueConnector">460,230 500,230 500,275</av:PointCollection>
                    <av:PointCollection x:Key="FalseConnector">430,200 430,140 815,140</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <FlowDecision.True>
                  <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">445,275</av:Point>
                        <av:Size x:Key="ShapeSize">110,70</av:Size>
                        <av:PointCollection x:Key="ConnectorLocation">555,310 570,310</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Extract" sap:VirtualizedContainerService.HintSize="468,696" sap2010:WorkflowViewState.IdRef="Sequence_68">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="Flag used for deciding if human validation is required in the extraction process." Name="extractionSuccessFlag" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Pre-extraction &amp;&#xA;Data Extraction" DisplayName="Extract" sap:VirtualizedContainerService.HintSize="434,177" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_106" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\50_Extract.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_TargetDocument">[strTargetFile]</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[config]</InArgument>
                          <InArgument x:TypeArguments="x:Int32" x:Key="in_MaxAttempts">[maxAttempts]</InArgument>
                          <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">[retryInterval]</InArgument>
                          <OutArgument x:TypeArguments="uisad:IDocumentData(uisad:DictionaryData)" x:Key="out_ExtractionResults">[extractionResults]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="FormatExtractionResults - Invoke Workflow File (FormatExtractionResults.xaml)" sap:VirtualizedContainerService.HintSize="434,177" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_114" UnSafe="False" WorkflowFileName="IDP logic\FormatExtractionResults.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <OutArgument x:TypeArguments="x:String" x:Key="out_strJsonFormattedExtractionResults">[strJsonFormattedExtractionResults]</OutArgument>
                          <InArgument x:TypeArguments="uisad:IDocumentData(uisad:DictionaryData)" x:Key="in_idocExtractionResults">[extractionResults]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_strExtractionResultsFolderPath">[config("ExtractionResultsParentFolderPath").ToString]</InArgument>
                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_blnIfAfterHumanValidation">False</InArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="out_strRegexAuthNumber">[strAuthNumber]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CheckExtractionResults - Invoke Workflow File (CheckExtractionResults.xaml)" sap:VirtualizedContainerService.HintSize="434,177" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_113" UnSafe="False" WorkflowFileName="Framework\55_ExtractionBusinessRuleValidation.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_strJsonData">[strJsonFormattedExtractionResults]</InArgument>
                          <OutArgument x:TypeArguments="x:Boolean" x:Key="out_AutoExtractionSuccess">[extractionSuccessFlag]</OutArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[config]</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_dictDocData">[dictDocData]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_strRegexAuthNumber">[strAuthNumber]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Assign DisplayName="Assign extractionSuccessFlag" sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_34">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[dictDocData("Extraction Success Flag")]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[extractionSuccessFlag.ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <FlowStep.Next>
                      <FlowDecision x:Name="__ReferenceID3" DisplayName="Successful?" sap:VirtualizedContainerService.HintSize="60,60" sap2010:WorkflowViewState.IdRef="FlowDecision_21">
                        <FlowDecision.Condition>
                          <VisualBasicValue x:TypeArguments="x:Boolean" DisplayName="Visual basic value" ExpressionText="CBool(dictDocData(&quot;Extraction Success Flag&quot;))" />
                        </FlowDecision.Condition>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <av:Point x:Key="ShapeLocation">570,280</av:Point>
                            <av:Size x:Key="ShapeSize">60,60</av:Size>
                            <av:PointCollection x:Key="FalseConnector">600,280 600,190 605,190</av:PointCollection>
                            <av:PointCollection x:Key="TrueConnector">630,310 665,310</av:PointCollection>
                            <x:String x:Key="TrueLabel">Yes</x:String>
                            <x:String x:Key="FalseLabel">No Data</x:String>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <FlowDecision.True>
                          <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_6">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">665,275</av:Point>
                                <av:Size x:Key="ShapeSize">110,70</av:Size>
                                <av:PointCollection x:Key="ConnectorLocation">775,310 785,310</av:PointCollection>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="PostProcessing" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_100" UnSafe="False" WorkflowFileName="Tests\Util\PostProcessing.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_strJsonFormattedExtractionResults">[strJsonFormattedExtractionResults]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_strFilePath">[strTargetFile]</InArgument>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[config]</InArgument>
                                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="io_dictDocData">[dictDocData]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <FlowStep.Next>
                              <FlowStep x:Name="__ReferenceID7" sap2010:WorkflowViewState.IdRef="FlowStep_1">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <av:Point x:Key="ShapeLocation">785,275</av:Point>
                                    <av:Size x:Key="ShapeSize">110,70</av:Size>
                                    <av:PointCollection x:Key="ConnectorLocation">895,310 905,310</av:PointCollection>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="CommentOut_6">
                                  <ui:CommentOut.Body>
                                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="506,539" sap2010:WorkflowViewState.IdRef="Sequence_77">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Sequence DisplayName="Export" sap:VirtualizedContainerService.HintSize="472,479" sap2010:WorkflowViewState.IdRef="Sequence_71">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <TryCatch DisplayName="Try Export - Success" sap:VirtualizedContainerService.HintSize="438,396" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                                          <TryCatch.Try>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Success Export - Invoke Workflow File (Export.xaml)" sap:VirtualizedContainerService.HintSize="346,145" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_112" UnSafe="False" WorkflowFileName="Export.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_strMasterLogFilePath">[MasterLogFilePath]</InArgument>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_dictDocData">[dictDocData]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_strJsonFromattedResults">[strJsonFormattedExtractionResults]</InArgument>
                                                <InArgument x:TypeArguments="s:String[]" x:Key="in_arrMasterLogColumnsNames">[Config("MasterLogColumnsNames").ToString.Split(";"c).toarray]</InArgument>
                                                <InArgument x:TypeArguments="uisad:IDocumentData(uisad:DictionaryData)" x:Key="in_extractionResults" />
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </TryCatch.Try>
                                          <TryCatch.Catches>
                                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,22" sap2010:WorkflowViewState.IdRef="Catch`1_7">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ActivityAction x:TypeArguments="s:Exception">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                </ActivityAction.Argument>
                                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_97" Level="Warn" Message="[&quot;Error at Export to master log file: &quot;+exception.Message+ &quot; source: &quot;+exception.Source]" />
                                              </ActivityAction>
                                            </Catch>
                                          </TryCatch.Catches>
                                        </TryCatch>
                                      </Sequence>
                                    </Sequence>
                                  </ui:CommentOut.Body>
                                </ui:CommentOut>
                                <FlowStep.Next>
                                  <x:Reference>__ReferenceID0</x:Reference>
                                </FlowStep.Next>
                              </FlowStep>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowDecision.True>
                        <FlowDecision.False>
                          <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_3">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">605,155</av:Point>
                                <av:Size x:Key="ShapeSize">110,70</av:Size>
                                <av:PointCollection x:Key="ConnectorLocation">715,190 720,190 720,275</av:PointCollection>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence sap2010:Annotation.AnnotationText="Extraction Validation &amp; Extractor training" DisplayName="Validate Extractors" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="Sequence_63">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="uisad:IDocumentData(uisad:DictionaryData)" sap2010:Annotation.AnnotationText="Human validated extraction results used for training." Name="validatedExtractionResults" />
                                <Variable x:TypeArguments="uisad1:CreatedValidationAction(uisad:DictionaryData)" Name="CreatedValidationAction" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence DisplayName="Create Validation Task and Resume" sap:VirtualizedContainerService.HintSize="484,1485" sap2010:WorkflowViewState.IdRef="Sequence_70">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message -  Create HitL Validation Action" sap:VirtualizedContainerService.HintSize="450,173" sap2010:WorkflowViewState.IdRef="LogMessage_88" Message="[config(&quot;LogMessage_CreateValidationAction&quot;).ToString + &quot; &quot; +Path.GetFileNameWithoutExtension(strTargetFile) +  Environment.NewLine + config(&quot;TargetFileKey&quot;).ToString]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:LogMessage>
                                <uisad1:CreateValidationAction x:TypeArguments="uisad:DictionaryData" BucketId="{x:Null}" BucketName="{x:Null}" ContainsDocument="{x:Null}" ContainsTaxonomy="{x:Null}" FieldsValidationConfidence="{x:Null}" OrchestratorFolderId="{x:Null}" OriginalFilePath="{x:Null}" ActionCatalogue="[config(&quot;ActionCatalog&quot;).ToString]" ActionPriority="Medium" ActionTitle="[config(&quot;ValidationActionTitle&quot;).ToString + &quot; &quot; + Path.GetFileNameWithoutExtension(strTargetFile)]" sap2010:Annotation.AnnotationText="" AutomaticExtractionResults="[extractionResults]" CreatedValidationAction="[CreatedValidationAction]" DisplayName="Create Validation Task" sap:VirtualizedContainerService.HintSize="450,206" sap2010:WorkflowViewState.IdRef="CreateValidationAction`1_1" OrchestratorBucketName="[config(&quot;StorageBucketName&quot;).ToString]" OrchestratorFolderName="[config(&quot;ActionFolderPath&quot;).ToString]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </uisad1:CreateValidationAction>
                                <If Condition="[TransactionItem IsNot Nothing]" DisplayName="If Valid Transaction Item - Set Data Validation Status" sap:VirtualizedContainerService.HintSize="450,428" sap2010:WorkflowViewState.IdRef="If_7">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="SetTransactionProgress - Extraction Validation" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_94" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\ReusableWorkflows\SetTransactionProgress.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Progress">[config("TransactionProgress_ExtractionValidation").ToString]</InArgument>
                                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[config]</InArgument>
                                        <InArgument x:TypeArguments="x:Int32" x:Key="in_MaxAttempts">[maxAttempts]</InArgument>
                                        <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">[retryInterval]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,90.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <ui:LogMessage DisplayName="Log Message - Wait On HitL Validation Action" sap:VirtualizedContainerService.HintSize="450,176.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_91" Message="[config(&quot;LogMessage_WaitOnValidationAction&quot;).ToString + CreatedValidationAction.ActionData.Id.ToString + Environment.NewLine + config(&quot;logKey&quot;).ToString]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:LogMessage>
                                <uisad1:WaitForValidationAction x:TypeArguments="uisad:DictionaryData" RemoveDataAfterProcessing="{x:Null}" WaitItemDataObject="{x:Null}" CreatedValidationAction="[CreatedValidationAction]" DisplayName="Wait for Validation Task and Resume" sap:VirtualizedContainerService.HintSize="450,124" sap2010:WorkflowViewState.IdRef="WaitForValidationAction`1_1" ValidatedExtractionResults="[validatedExtractionResults]" />
                                <ui:LogMessage DisplayName="Log Message - DataValidation Resume" sap:VirtualizedContainerService.HintSize="450,176.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_92" Message="[String.Format(config(&quot;LogMessage_ResumeAfterDataValidation&quot;).ToString, &quot; &quot; + &quot;action #&quot; + CreatedValidationAction.ActionData.Id.ToString, Path.GetFileNameWithoutExtension(strTargetFile) +  Environment.NewLine + config(&quot;logKey&quot;).ToString)]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:LogMessage>
                                <Assign DisplayName="Assign Extraction Result" sap:VirtualizedContainerService.HintSize="450,108" sap2010:WorkflowViewState.IdRef="Assign_26">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="uisad:IDocumentData(uisad:DictionaryData)">[extractionResults]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="uisad:IDocumentData(uisad:DictionaryData)">[validatedExtractionResults]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="FormatExtractionResults - Invoke Workflow File (FormatExtractionResults.xaml)" sap:VirtualizedContainerService.HintSize="484,177.33333333333334" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_101" UnSafe="False" WorkflowFileName="IDP logic\FormatExtractionResults.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <OutArgument x:TypeArguments="x:String" x:Key="out_strJsonFormattedExtractionResults">[strJsonFormattedExtractionResults]</OutArgument>
                                  <InArgument x:TypeArguments="uisad:IDocumentData(uisad:DictionaryData)" x:Key="in_idocExtractionResults">[extractionResults]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_strExtractionResultsFolderPath">[config("ExtractionResultsParentFolderPath").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:Boolean" x:Key="in_blnIfAfterHumanValidation">True</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Check Results for Out Of Scope - Invoke Workflow File (Check Results for Out Of Scope.xaml)" sap:VirtualizedContainerService.HintSize="484,168" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_115" UnSafe="False" WorkflowFileName="Tests\Util\CheckResultsForOutOfScope.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_strJsonExtractionResults">[strJsonFormattedExtractionResults]</InArgument>
                                  <OutArgument x:TypeArguments="njl:JObject" x:Key="out_jsonObjectExtractionResults" />
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </Sequence>
                            <FlowStep.Next>
                              <x:Reference>__ReferenceID1</x:Reference>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowDecision.False>
                      </FlowDecision>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowDecision.True>
                <FlowDecision.False>
                  <FlowStep x:Name="__ReferenceID9" sap2010:WorkflowViewState.IdRef="FlowStep_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">815,105</av:Point>
                        <av:Size x:Key="ShapeSize">110,70</av:Size>
                        <av:PointCollection x:Key="ConnectorLocation">925,140 960,140 960,275</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Throw DisplayName="Throw File not found" Exception="[New BusinessRuleException(&quot;Target file not found: &quot;+strTargetFile)]" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="Throw_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Throw>
                    <FlowStep.Next>
                      <x:Reference>__ReferenceID0</x:Reference>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowDecision.False>
              </FlowDecision>
            </FlowStep.Next>
          </FlowStep>
          <x:Reference>__ReferenceID2</x:Reference>
          <x:Reference>__ReferenceID3</x:Reference>
          <x:Reference>__ReferenceID4</x:Reference>
          <x:Reference>__ReferenceID1</x:Reference>
          <FlowStep x:Name="__ReferenceID10" sap2010:WorkflowViewState.IdRef="FlowStep_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:Point x:Key="ShapeLocation">115,275</av:Point>
                <av:Size x:Key="ShapeSize">110,70</av:Size>
                <av:PointCollection x:Key="ConnectorLocation">170,275 170,230 210,230</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Initialize Process" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="Sequence_69">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="416,57" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                <ui:CommentOut.Body>
                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="468,375.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_72">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap2010:Annotation.AnnotationText="If Queue is used then it will be rewritten" DisplayName="Assign strTargetFile" sap:VirtualizedContainerService.HintSize="434,148" sap2010:WorkflowViewState.IdRef="Assign_28">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strTargetFile]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[FilePath]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,167.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_93" Level="Fatal" Message="[&quot;Target File path from argument: &quot;+FilePath]" />
                  </Sequence>
                </ui:CommentOut.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:CommentOut>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Loads Orchestrator assets and executes logic for process-specific &amp; Document Understanding Initialization" DisplayName="Initialize Process" sap:VirtualizedContainerService.HintSize="416,168" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_104" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\10_InitializeProcess.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_AssetsSheet">Assets</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">[str_Config_Path]</InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_MaxAttempts">[maxAttempts]</InArgument>
                  <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">[retryInterval]</InArgument>
                  <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_Config">[config]</InOutArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
            </Sequence>
            <FlowStep.Next>
              <FlowDecision x:Name="__ReferenceID8" Condition="[IfUseQueue]" DisplayName="Using Queue" sap:VirtualizedContainerService.HintSize="60,60" sap2010:WorkflowViewState.IdRef="FlowDecision_22" True="{x:Reference __ReferenceID5}" False="{x:Reference __ReferenceID6}">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <av:Point x:Key="ShapeLocation">210,200</av:Point>
                    <av:Size x:Key="ShapeSize">60,60</av:Size>
                    <av:PointCollection x:Key="TrueConnector">270,230 330,230 330,275</av:PointCollection>
                    <av:PointCollection x:Key="FalseConnector">240,200 240,170 370,170 370,230 400,230</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </FlowDecision>
            </FlowStep.Next>
          </FlowStep>
          <x:Reference>__ReferenceID7</x:Reference>
          <x:Reference>__ReferenceID8</x:Reference>
          <x:Reference>__ReferenceID6</x:Reference>
          <x:Reference>__ReferenceID9</x:Reference>
        </Flowchart>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="604,22" sap2010:WorkflowViewState.IdRef="Catch`1_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="AbortSequence" sap:VirtualizedContainerService.HintSize="472,747" sap2010:WorkflowViewState.IdRef="Sequence_48">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch DisplayName="Try ERR_AbortProcess " sap:VirtualizedContainerService.HintSize="438,405" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ERR_AbortProcess workflow" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_79" LogEntry="OnlyInvocation" LogExit="OnlySuccessfulReturn" UnSafe="False" WorkflowFileName="Framework\ERR_AbortProcess.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="s:Exception" x:Key="in_Exception">[exception]</InArgument>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[config]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_strTargetFile">[strTargetFile]</InArgument>
                      <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_transactionItem">[TransactionItem]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,22" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exceptionAbort" />
                      </ActivityAction.Argument>
                      <ui:LogMessage DisplayName="Log ERR_AbortProcess failed" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_95" Level="Warn" Message="[&quot;ERR_AbortProcess failed. Will not rethrow. &quot;+exception.Message+&quot; at &quot;+exception.Source]" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="SetTransactionStatus - Failure" sap:VirtualizedContainerService.HintSize="438,177" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_86" LogEntry="OnlyInvocation" LogExit="OnlySuccessfulReturn" UnSafe="False" WorkflowFileName="Framework\ReusableWorkflows\SetTransactionStatus.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                  <InArgument x:TypeArguments="s:Exception" x:Key="in_Exception">[exception]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[config]</InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_MaxAttempts">[maxAttempts]</InArgument>
                  <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">[retryInterval]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_dictDocData">[Nothing]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="438,57" sap2010:WorkflowViewState.IdRef="CommentOut_7">
                <ui:CommentOut.Body>
                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="472,456" sap2010:WorkflowViewState.IdRef="Sequence_78">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch DisplayName="Try Export" sap:VirtualizedContainerService.HintSize="438,396" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                      <TryCatch.Try>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Export - Invoke Workflow File (Export.xaml)" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_111" UnSafe="False" WorkflowFileName="Export.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_strMasterLogFilePath">[MasterLogFilePath]</InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_dictDocData">[dictDocData]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_strJsonFromattedResults">[strJsonFormattedExtractionResults]</InArgument>
                            <InArgument x:TypeArguments="s:String[]" x:Key="in_arrMasterLogColumnsNames">[Config("MasterLogColumnsNames").ToString.Split(";"c).toarray]</InArgument>
                            <InArgument x:TypeArguments="uisad:IDocumentData(uisad:DictionaryData)" x:Key="in_extractionResults" />
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,22" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_96" Level="Warn" Message="[&quot;Error at Export to master log file: &quot;+exception.Message+ &quot; source: &quot;+exception.Source]" />
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                    </TryCatch>
                  </Sequence>
                </ui:CommentOut.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:CommentOut>
              <Rethrow DisplayName="Rethrow Exception" sap:VirtualizedContainerService.HintSize="438,48" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>