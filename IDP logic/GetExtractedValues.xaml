<Activity mc:Ignorable="sap sap2010" x:Class="GetExractedValues" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_strJson" Type="InArgument(x:String)" />
    <x:Property Name="in_strFilePath" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="io_dictDocData" Type="InOutArgument(scg:Dictionary(x:String, x:String))" />
  </x:Members>
  <this:GetExractedValues.in_strJson>
    <InArgument x:TypeArguments="x:String" />
  </this:GetExractedValues.in_strJson>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UMDelegationPerformer</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UM_DelegationPerformer</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>UM_Auth_PatientExtraction</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.StudioWeb.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>ExtendedExtractionRe.PYRmKYmudQ1oUeAymAF1h</AssemblyReference>
      <AssemblyReference>Microsoft.Extensions.DependencyModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>UM Delegation Performer.Core</AssemblyReference>
      <AssemblyReference>UM_Delegation-Performer.Core</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>UM_Auth_PatientExtraction.Core</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="890.6666666666666,820.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_12">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Get Exracted Values" sap:VirtualizedContainerService.HintSize="468,798" sap2010:WorkflowViewState.IdRef="Sequence_11">
      <Sequence.Variables>
        <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dictDataFromDocument" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="convert to dictioanry" sap:VirtualizedContainerService.HintSize="434,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_12">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dictDataFromDocument]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[UM_Auth_PatientExtraction.ConvertJsonToDict.ConvertJsonToDictionary(in_strJson)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap2010:Annotation.AnnotationText="' Merge dictDataFromDocument into io_dictDocData without overwriting existing keys&#xA;' Steps:&#xA;' 1. dictDataFromDocument.Where(Function(kvp) Not io_dictDocData.ContainsKey(kvp.Key))&#xA;'    - Filters out any keys that already exist in io_dictDocData&#xA;' 2. io_dictDocData.Concat(...)&#xA;'    - Combines the original io_dictDocData with the filtered entries&#xA;' 3. .ToDictionary(Function(x) x.Key, Function(x) x.Value)&#xA;'    - Converts the resulting sequence back into a Dictionary(Of String, String)&#xA;' Result: io_dictDocData now contains all original entries plus new entries from dictDataFromDocument&#xA;'         without overwriting existing keys" sap:VirtualizedContainerService.HintSize="434,366" sap2010:WorkflowViewState.IdRef="Assign_10">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[io_dictDocData]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" xml:space="preserve">[io_dictDocData.Concat(dictDataFromDocument.Where(Function(kvp) Not io_dictDocData.ContainsKey(kvp.Key))) _
                       .ToDictionary(Function(x) x.Key, Function(x) x.Value)]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <Assign DisplayName="convert Admit Date format" sap:VirtualizedContainerService.HintSize="434,120.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_8">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[io_dictDocData("Admit Date")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[If(io_dictDocData.ContainsKey("Admit Date"),
   DateTime.ParseExact(
       io_dictDocData("Admit Date"),
       in_Config("DateFormats").ToString.Split(";"c).Select(Function(f) f.Trim(""""c)).ToArray(),
       System.Globalization.CultureInfo.InvariantCulture,
       System.Globalization.DateTimeStyles.None
   ).ToString("yyyy-MM-dd"),
   Nothing)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="convert End of service Date format" sap:VirtualizedContainerService.HintSize="434,111.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_13">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[io_dictDocData("End of service")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[If(io_dictDocData.ContainsKey("End of service"),
   DateTime.ParseExact(
       io_dictDocData("End of service"),
       in_Config("DateFormats").ToString.Split(";"c).Select(Function(f) f.Trim(""""c)).ToArray(),
       System.Globalization.CultureInfo.InvariantCulture,
       System.Globalization.DateTimeStyles.None
   ).ToString("yyyy-MM-dd"),
   Nothing)]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
  </Sequence>
</Activity>